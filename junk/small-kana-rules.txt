Standard katakana

{sh,ch,j}i + y[aou] -> {sh,ch,j}[aou]
(consonant not {sh,ch,j})i + y[aou] -> (consonant)y[aou]

Transcription katakana

{sh,ch,j}i + e -> {sh,ch,j}e
[sz]u + i -> [sz]i
(consonant not {sh,ch,j})i + e -> (consonant)ye
(consonant)u + wa -> (consonant)wa
(consonant not [sz])u + [eio] -> (consonant)w[eio]
[dt]e + i -> [dt]i
[dt]o + u -> [dt]u
[dt]e + yu -> [dt]yu
tsu + [aeio] -> ts[aeio]
ho + u -> hu
[fv]u + [aeio] -> [fv][aeio]
[fv]u + y[aou] -> [fv]y[aou]
[fv]u + i + e -> [fv]ye
(no consonant)i + [ei] -> y[ei]
(no consonant)u + [eiou] -> w[eiou]
(no consonant)u + yu -> wyu

---

Rule 1:
- remove preceding vowel

(consonant not {sh,ch,j})i + y[aou] -> (consonant)y[aou]
{sh,ch,j}i + e -> {sh,ch,j}e
[sz]u + i -> [sz]i
(consonant)u + wa -> (consonant)wa
[dt]e + i -> [dt]i
[dt]o + u -> [dt]u
[dt]e + yu -> [dt]yu
tsu + [aeio] -> ts[aeio]
ho + u -> hu
[fv]u + [aeio] -> [fv][aeio]
[fv]u + y[aou] -> [fv]y[aou]

Rule 2:
- replace preceding vowel {u -> w, i -> y}

(consonant not {sh,ch,j})i + e -> (consonant)ye (* [fv] generated by previous rule)
(consonant not {ts,s,z,f,v})u + [eio] -> (consonant)w[eio]
(no consonant)i + [ei] -> y[ei]
(no consonant)u + [eiou] -> w[eiou]
(no consonant)u + yu -> wyu

Rule 3:
- remove preceding vowel and new initial consonant

{sh,ch,j}i + y[aou] -> {sh,ch,j}[aou]

---

Initial consonant may be carried over after processing a small kana
- Actually no, this is not necessary - the only case where it would be necessary is [fv]u + i + e, but that is handled by first running the [fv]u + i rule, giving [fv]i but leaving the last stored mora as "i", then running the (no consonant)i + [ei] rule, giving ye. This all happens without any special-case code.

{sh,ch,j} i y (use rule 3)
----
[fv] u *		(use rule 1)
[dt] [eo] *		(use rule 1)
h o *			(use rule 1)
ts u *			(use rule 1)
[sz] u *		(use rule 1)
{sh,ch,j} i *		(use rule 1)
----
* i y (use rule 1)
* u w (use rule 1)
----
* [iu] * (use rule 2)

